C51 COMPILER V9.60.0.0   MAIN                                                              10/05/2025 20:51:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5_2\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\src\tennp\g
                    -it\LightCube\Firmware\LightCube\src\main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMI
                    -ZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/SiliconLabs/SimplicityStudio/v5_2/developer/sdks/8051
                    -/v4.3.1//Device/EFM8BB50/inc;C:/SiliconLabs/SimplicityStudio/v5_2/developer/sdks/8051/v4.3.1//Device/shared/si8051Base) 
                    -PRINT(.\src\main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\main.OBJ)

line level    source

   1          //#pragma src
   2          //-----------------------------------------------------------------------------
   3          // Includes
   4          //-----------------------------------------------------------------------------
   5          #include "main.h"
   6          #include "InitDevice.h"
   7          #include "status_led.h"
   8          #include "button.h"
   9          #include "pwm.h"
  10          #include "candle.h"
  11          
  12          //volatile uint16_t tmp_millis;
  13          //volatile uint16_t butcntr;
  14          //volatile bit delay_on;
  15          volatile U16_U8 pwm_channels[4];
  16          
  17          bit effect_trigger = 0;
  18          uint8_t ambient_level = 9; // Default to max brightness
  19          bit poweroff_trigger = 0;  // Set to 1 when power-off should begin
  20          
  21          
  22          //-----------------------------------------------------------------------------
  23          // SiLabs_Startup() Routine
  24          // ----------------------------------------------------------------------------
  25          // This function is called immediately after reset, before the initialization
  26          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  27          // useful place to disable the watchdog timer, which is enable by default
  28          // and may trigger before main() in some instances.
  29          //-----------------------------------------------------------------------------
  30          void SiLabs_Startup(void) {
  31   1        // $[SiLabs Startup]
  32   1        // [SiLabs Startup]$
  33   1      }
  34          
  35          //-----------------------------------------------------------------------------
  36          // main() Routine
  37          // ----------------------------------------------------------------------------
  38          int main(void) {
  39   1        enter_DefaultMode_from_RESET();
  40   1      
  41   1          SFRPAGE = 0x10;
  42   1          PWMCFG0 = PWMCFG0_PWMMODE__EDGE | PWMCFG0_PWMCLKEN__ENABLE | PWMCFG0_SYNCUPD__CH0CH1CH2;
  43   1      //    PWMCFG1 = PWMCFG1_DTIEN__ENABLE |
  44   1          PWMCFG2 = PWMCFG2_CNTRZERO__ZERO;
  45   1          PWMLIML = 0xFF;
  46   1          PWMLIMH = 0xFF;
  47   1          PWMCFG1 = PWMCFG1_PWMLTSYS__GTSYSCK | PWMCFG1_PWMEN__ENABLE; // start PWM0
  48   1          SFRPAGE = 0x00;
  49   1      
  50   1        PCA0CN0_CR = PCA0CN0_CR__RUN; // Start PCA0 after config is done
  51   1      
  52   1        set_pwm(0, 0);
C51 COMPILER V9.60.0.0   MAIN                                                              10/05/2025 20:51:34 PAGE 2   

  53   1        set_pwm(1, 0);
  54   1        set_pwm(2, 0);
  55   1        set_pwm(3, 0);
  56   1      
  57   1        IE_EA = 1;
  58   1      
  59   1        rand_set(getRAW_Ambient()); // set initial seed for rand
  60   1      
  61   1        PIN_BUT = 1;
  62   1      
  63   1        PIN_LED = 0;
  64   1        while(PIN_BUT); // wait until button is depressed
  65   1      
  66   1        led_cmd = LED_CMD_INIT;
  67   1      
  68   1      //  setAmbientLevel(7);
  69   1        candle_init();
  70   1      
  71   1      
  72   1        while(1){
  73   2            uint16_t ambient = getRAW_Ambient();
  74   2      
  75   2            if(effect_trigger){
  76   3                effect_trigger = 0;
  77   3                candle_tick();
  78   3                process_button();
  79   3                update_status_led(led_cmd);
  80   3            }
  81   2      
  82   2            if (poweroff_trigger) {
  83   3                // Call your external power-off routine here
  84   3                bit fade_finished = 0;
  85   3                PIN_LED = 1;
  86   3                start_poweroff_sequence();
  87   3                while(!fade_finished){
  88   4                    if(effect_trigger){
  89   5                        effect_trigger = 0;
  90   5                        fade_finished = process_fadeout();
  91   5                    }
  92   4                }
  93   3                while(PIN_BUT);
  94   3                delay_ms(100);
  95   3                PIN_BUT = 0;
  96   3                REG0CN = REG0CN_STOPCF__SHUTDOWN;
  97   3                PCON0 = PCON0_STOP__STOP;
  98   3            }
  99   2      
 100   2        }
 101   1      
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              10/05/2025 20:51:34 PAGE 3   

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
